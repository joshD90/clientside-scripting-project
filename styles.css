/* Box sizing will allow us to more reliably predict how elements work with margins and padding */
* {
  box-sizing: border-box;
}
/* This will be easier to work with the responsive Rem unit.  Unfortunately bootstrap appears to be geared towards 16px font-size so this doesn't really work */
/* :root {
  font-size: 10px;
} */

body {
  padding: 0;
  margin: 0;
  --primary-color: #910a2d;
  --secondary-color: #606060;
  --background-color: #f5f5f5;
  --highlight-color: green;
  --black-substitute: #1a1a1a;
}

/* Custom Classes */
/* background */
.lucky-bg-primary {
  background-color: var(--primary-color);
}
.lucky-bg-secondary {
  background-color: var(--secondary-color);
}
.lucky-bg-background {
  background-color: var(--background-color);
}
.lucky-bg-hightlight {
  background-color: var(--highlight-color);
}
.lucky-bg-black {
  background-color: var(--black-substitute);
}

/* Border Color Classes */
.lucky-border-primary {
  border-color: var(--primary-color);
}
.lucky-border-secondary {
  border-color: var(--secondary-color);
}
.lucky-border-background {
  border-color: var(--background-color);
}
.lucky-border-highlight {
  border-color: var(--highlight-color);
}
.lucky-border-highlight {
  border-color: var(--highlight-color);
}
/* Use !important to ensure the border style (solid) and width (1px) are applied if the element doesn't already have a border defined */
.lucky-border-primary,
.lucky-border-secondary,
.lucky-border-background,
.lucky-border-highlight {
  border-style: solid !important;
  border-width: 1px !important;
}

/* Text Color Classes */
.lucky-text-primary {
  color: var(--primary-color);
}
.lucky-text-secondary {
  color: var(--secondary-color);
}
.lucky-text-background {
  color: var(--background-color);
}
.lucky-text-highlight {
  color: var(--highlight-color);
}
.lucky-text-black {
  color: var(--black-substitute);
}

/* Products Specifics Section */
.product-grid {
  width: 100%;
  display: grid;
  gap: 1rem;
  grid-template-columns: repeat(3, 1fr);
  grid-auto-flow: dense;
  justify-items: center;
}

@media screen and (max-width: 1024px) {
  .product-grid {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media screen and (max-width: 520px) {
  .product-grid {
    grid-template-columns: repeat(1, 1fr);
  }
}

/* MiniGame CSS */
#driveArea {
  height: calc(100vh - 5rem);
  position: relative;
}

#gameCar {
  position: absolute;
  top: 100px;
  left: 100px;
  height: 4rem;
  width: 3rem;
  object-fit: fill;
  transform: scale(1.1);
}
#alertMessage.alert-success {
  cursor: pointer;
}

#alertMessage.alert-success:hover {
  filter: brightness(0.95);
}
